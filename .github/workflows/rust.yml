name: Rust

on: [push]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
  
    - name: ðŸ”’ Generate lockfile
      run: cargo generate-lockfile

    - name: âš¡ Cargo Cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      # with:
      #   path: |
      #       ~/.cargo/registry
      #       ~/.cargo/git
      #       target
      #   key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
      #   # restore-keys: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}

    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable

    - name: ðŸ”¨ Build
      run: cargo build --all-targets --release

  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            components: rustfmt
            override: true
      - run: cargo fmt --all -- --check
